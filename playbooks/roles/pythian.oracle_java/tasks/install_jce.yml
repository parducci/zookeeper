---
# Installation script for Java Cryptography Extensions (JCE)

- name: Find Java Home in Linux
  shell: dirname $(dirname $(readlink -e $(which java)))
  register: java_home_cmd
  changed_when: false

- name: Set java_home
  set_fact: java_home={{ java_home_cmd.stdout }}
  when: java_home_cmd.skipped is not defined and java_home is not defined

- name: Check if JCE is already installed
  shell: "{{ java_home }}/bin/jrunscript -e 'print (javax.crypto.Cipher.getMaxAllowedKeyLength(\"RC5\") >= 256);'"
  changed_when: false
  ignore_errors: true
  register: jce_check

- block:

    - name: Download JCE
      get_url:
        url: "{{ jce_zip_url }}"
        headers:
          Cookie: 'oraclelicense=accept-securebackup-cookie'
        dest: "{{ java_download_path }}/{{ jce_zip_file }}"
      when: java_download_from_oracle

    - name: Copy JCE zip from local
      copy:
        src: "{{ playbook_dir }}/files/{{ jce_zip_file }}"
        dest: "{{ java_download_path }}/{{ jce_zip_file }}"
      when: not java_download_from_oracle

    - name: Install unzip
      package: name=unzip state=present

    - name: Unzip JCE
      unarchive:
        src: "{{ java_download_path }}/{{ jce_zip_file }}"
        dest: "{{ java_download_path }}/"
        remote_src: yes
        creates: "{{ java_download_path }}/{{ jce_zip_folder }}"

    - name: Install JCE policies
      copy:
        src: "{{ java_download_path }}/{{ jce_zip_folder }}/{{ item }}"
        dest: "{{ java_home }}/jre/lib/security/{{ item }}"
        remote_src: True
        mode: 0664
      become: true
      with_items:
        - local_policy.jar
        - US_export_policy.jar

    - name: Remove temporary downloaded JCE files, if requested
      file: path={{ item }} state=absent
      with_items:
        - "{{ java_download_path }}/{{ jce_zip_file }}"
        - "{{ java_download_path }}/{{ jce_zip_folder }}"
      ignore_errors: true
      when: java_remove_download

  when: jce_check.stdout == "false"
